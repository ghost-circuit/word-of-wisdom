// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.19.6
// source: wisdom.proto

package wisdom

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Response containing the challenge and the difficulty level set by the server.
type ChallengeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Challenge  []byte `protobuf:"bytes,1,opt,name=challenge,proto3" json:"challenge,omitempty"`    // The challenge generated by the server.
	Difficulty uint32 `protobuf:"varint,2,opt,name=difficulty,proto3" json:"difficulty,omitempty"` // The difficulty level determined by the server.
}

func (x *ChallengeResponse) Reset() {
	*x = ChallengeResponse{}
	mi := &file_wisdom_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeResponse) ProtoMessage() {}

func (x *ChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wisdom_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeResponse.ProtoReflect.Descriptor instead.
func (*ChallengeResponse) Descriptor() ([]byte, []int) {
	return file_wisdom_proto_rawDescGZIP(), []int{0}
}

func (x *ChallengeResponse) GetChallenge() []byte {
	if x != nil {
		return x.Challenge
	}
	return nil
}

func (x *ChallengeResponse) GetDifficulty() uint32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

// Request to submit a solution for a given challenge.
type SolutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Challenge []byte `protobuf:"bytes,1,opt,name=challenge,proto3" json:"challenge,omitempty"` // The challenge provided by the server.
	Solution  []byte `protobuf:"bytes,2,opt,name=solution,proto3" json:"solution,omitempty"`   // The solution to the challenge.
}

func (x *SolutionRequest) Reset() {
	*x = SolutionRequest{}
	mi := &file_wisdom_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SolutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolutionRequest) ProtoMessage() {}

func (x *SolutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wisdom_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolutionRequest.ProtoReflect.Descriptor instead.
func (*SolutionRequest) Descriptor() ([]byte, []int) {
	return file_wisdom_proto_rawDescGZIP(), []int{1}
}

func (x *SolutionRequest) GetChallenge() []byte {
	if x != nil {
		return x.Challenge
	}
	return nil
}

func (x *SolutionRequest) GetSolution() []byte {
	if x != nil {
		return x.Solution
	}
	return nil
}

// Response containing the word of wisdom if the solution is correct.
type SolutionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quote *Quote `protobuf:"bytes,1,opt,name=quote,proto3" json:"quote,omitempty"` // The word of wisdom (only provided if the solution is valid).
}

func (x *SolutionResponse) Reset() {
	*x = SolutionResponse{}
	mi := &file_wisdom_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SolutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolutionResponse) ProtoMessage() {}

func (x *SolutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wisdom_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolutionResponse.ProtoReflect.Descriptor instead.
func (*SolutionResponse) Descriptor() ([]byte, []int) {
	return file_wisdom_proto_rawDescGZIP(), []int{2}
}

func (x *SolutionResponse) GetQuote() *Quote {
	if x != nil {
		return x.Quote
	}
	return nil
}

// Wisdom contains a quote and the author of the quote.
type Quote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text   string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`     // The quote.
	Author string `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"` // The author of the quote.
	Id     int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`        // The id of the quote.
}

func (x *Quote) Reset() {
	*x = Quote{}
	mi := &file_wisdom_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Quote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quote) ProtoMessage() {}

func (x *Quote) ProtoReflect() protoreflect.Message {
	mi := &file_wisdom_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quote.ProtoReflect.Descriptor instead.
func (*Quote) Descriptor() ([]byte, []int) {
	return file_wisdom_proto_rawDescGZIP(), []int{3}
}

func (x *Quote) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Quote) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Quote) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_wisdom_proto protoreflect.FileDescriptor

var file_wisdom_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x77, 0x69, 0x73, 0x64, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x77, 0x69, 0x73, 0x64, 0x6f, 0x6d, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x51, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63,
	0x75, 0x6c, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66,
	0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x22, 0x4b, 0x0a, 0x0f, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x37, 0x0a, 0x10, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x69, 0x73, 0x64, 0x6f, 0x6d, 0x2e,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x22, 0x43, 0x0a, 0x05,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x32, 0x9d, 0x01, 0x0a, 0x13, 0x57, 0x6f, 0x72, 0x64, 0x4f, 0x66, 0x57, 0x69, 0x73, 0x64,
	0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x19, 0x2e, 0x77, 0x69, 0x73, 0x64, 0x6f, 0x6d, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17,
	0x2e, 0x77, 0x69, 0x73, 0x64, 0x6f, 0x6d, 0x2e, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x77, 0x69, 0x73, 0x64, 0x6f, 0x6d,
	0x2e, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x61, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x2d, 0x62, 0x61, 0x69, 0x7a, 0x68, 0x75, 0x6d, 0x61,
	0x6e, 0x6f, 0x76, 0x2f, 0x77, 0x6f, 0x72, 0x64, 0x2d, 0x6f, 0x66, 0x2d, 0x77, 0x69, 0x73, 0x64,
	0x6f, 0x6d, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2f, 0x77, 0x69, 0x73, 0x64, 0x6f, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wisdom_proto_rawDescOnce sync.Once
	file_wisdom_proto_rawDescData = file_wisdom_proto_rawDesc
)

func file_wisdom_proto_rawDescGZIP() []byte {
	file_wisdom_proto_rawDescOnce.Do(func() {
		file_wisdom_proto_rawDescData = protoimpl.X.CompressGZIP(file_wisdom_proto_rawDescData)
	})
	return file_wisdom_proto_rawDescData
}

var file_wisdom_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_wisdom_proto_goTypes = []any{
	(*ChallengeResponse)(nil), // 0: wisdom.ChallengeResponse
	(*SolutionRequest)(nil),   // 1: wisdom.SolutionRequest
	(*SolutionResponse)(nil),  // 2: wisdom.SolutionResponse
	(*Quote)(nil),             // 3: wisdom.Quote
	(*emptypb.Empty)(nil),     // 4: google.protobuf.Empty
}
var file_wisdom_proto_depIdxs = []int32{
	3, // 0: wisdom.SolutionResponse.quote:type_name -> wisdom.Quote
	4, // 1: wisdom.WordOfWisdomService.GetChallenge:input_type -> google.protobuf.Empty
	1, // 2: wisdom.WordOfWisdomService.SubmitSolution:input_type -> wisdom.SolutionRequest
	0, // 3: wisdom.WordOfWisdomService.GetChallenge:output_type -> wisdom.ChallengeResponse
	2, // 4: wisdom.WordOfWisdomService.SubmitSolution:output_type -> wisdom.SolutionResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_wisdom_proto_init() }
func file_wisdom_proto_init() {
	if File_wisdom_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wisdom_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wisdom_proto_goTypes,
		DependencyIndexes: file_wisdom_proto_depIdxs,
		MessageInfos:      file_wisdom_proto_msgTypes,
	}.Build()
	File_wisdom_proto = out.File
	file_wisdom_proto_rawDesc = nil
	file_wisdom_proto_goTypes = nil
	file_wisdom_proto_depIdxs = nil
}
